// Generated by React Router

import "react-router"

declare module "react-router" {
  interface Register {
    pages: Pages
    routeFiles: RouteFiles
  }
}

type Pages = {
  "/": {
    params: {};
  };
  "/actor/:actorName": {
    params: {
      "actorName": string;
    };
  };
  "/actors": {
    params: {};
  };
  "/char/:charHanzi": {
    params: {
      "charHanzi": string;
    };
  };
  "/chars": {
    params: {};
  };
  "/conflicts": {
    params: {};
  };
  "/invalid_data": {
    params: {};
  };
  "/integrity": {
    params: {};
  };
  "/phrase/:phraseHanzi": {
    params: {
      "phraseHanzi": string;
    };
  };
  "/phrases": {
    params: {};
  };
  "/phrases_import": {
    params: {};
  };
  "/phrases_more": {
    params: {};
  };
  "/pinyin": {
    params: {};
  };
  "/place/:placeName": {
    params: {
      "placeName": string;
    };
  };
  "/places": {
    params: {};
  };
  "/practice": {
    params: {};
  };
  "/problematic": {
    params: {};
  };
  "/prop/:propName": {
    params: {
      "propName": string;
    };
  };
  "/props": {
    params: {};
  };
  "/settings": {
    params: {};
  };
  "/similar_props": {
    params: {};
  };
  "/stats": {
    params: {};
  };
  "/stats_progress": {
    params: {};
  };
  "/story": {
    params: {};
  };
  "/study": {
    params: {};
  };
  "/study_weak_chars": {
    params: {};
  };
  "/advance_cards": {
    params: {};
  };
  "/sylable/:sylable": {
    params: {
      "sylable": string;
    };
  };
  "/tag/:tagName": {
    params: {
      "tagName": string;
    };
  };
  "/tags": {
    params: {};
  };
  "/todo_chars": {
    params: {};
  };
  "/chars_sentence_input": {
    params: {};
  };
  "/chars_multiple_pronunciation": {
    params: {};
  };
  "/exam_level": {
    params: {};
  };
  "/help": {
    params: {};
  };
  "/homophones": {
    params: {};
  };
  "/migration": {
    params: {};
  };
  "/tone/:toneName": {
    params: {
      "toneName": string;
    };
  };
  "/tones": {
    params: {};
  };
  "/zhuyin_typing": {
    params: {};
  };
  "/dong_demo": {
    params: {};
  };
  "/installHook.js.map": {
    params: {};
  };
};

type RouteFiles = {
  "root.tsx": {
    id: "root";
    page: "/" | "/actor/:actorName" | "/actors" | "/char/:charHanzi" | "/chars" | "/conflicts" | "/invalid_data" | "/integrity" | "/phrase/:phraseHanzi" | "/phrases" | "/phrases_import" | "/phrases_more" | "/pinyin" | "/place/:placeName" | "/places" | "/practice" | "/problematic" | "/prop/:propName" | "/props" | "/settings" | "/similar_props" | "/stats" | "/stats_progress" | "/story" | "/study" | "/study_weak_chars" | "/advance_cards" | "/sylable/:sylable" | "/tag/:tagName" | "/tags" | "/todo_chars" | "/chars_sentence_input" | "/chars_multiple_pronunciation" | "/exam_level" | "/help" | "/homophones" | "/migration" | "/tone/:toneName" | "/tones" | "/zhuyin_typing" | "/dong_demo" | "/installHook.js.map";
  };
  "routes/actor/$actorName.tsx": {
    id: "routes/actor/$actorName";
    page: "/actor/:actorName";
  };
  "routes/actors.tsx": {
    id: "routes/actors";
    page: "/actors";
  };
  "routes/char/$charHanzi.tsx": {
    id: "routes/char/$charHanzi";
    page: "/char/:charHanzi";
  };
  "routes/chars.tsx": {
    id: "routes/chars";
    page: "/chars";
  };
  "routes/conflicts.tsx": {
    id: "routes/conflicts";
    page: "/conflicts";
  };
  "routes/invalid_data.tsx": {
    id: "routes/invalid_data";
    page: "/invalid_data";
  };
  "routes/integrity.tsx": {
    id: "routes/integrity";
    page: "/integrity";
  };
  "routes/phrase/$phraseHanzi.tsx": {
    id: "routes/phrase/$phraseHanzi";
    page: "/phrase/:phraseHanzi";
  };
  "routes/phrases.tsx": {
    id: "routes/phrases";
    page: "/phrases";
  };
  "routes/phrases_import.tsx": {
    id: "routes/phrases_import";
    page: "/phrases_import";
  };
  "routes/phrases_more.tsx": {
    id: "routes/phrases_more";
    page: "/phrases_more";
  };
  "routes/pinyin.tsx": {
    id: "routes/pinyin";
    page: "/pinyin";
  };
  "routes/place/$placeName.tsx": {
    id: "routes/place/$placeName";
    page: "/place/:placeName";
  };
  "routes/places.tsx": {
    id: "routes/places";
    page: "/places";
  };
  "routes/practice.tsx": {
    id: "routes/practice";
    page: "/practice";
  };
  "routes/problematic.tsx": {
    id: "routes/problematic";
    page: "/problematic";
  };
  "routes/prop/$propName.tsx": {
    id: "routes/prop/$propName";
    page: "/prop/:propName";
  };
  "routes/props.tsx": {
    id: "routes/props";
    page: "/props";
  };
  "routes/settings.tsx": {
    id: "routes/settings";
    page: "/settings";
  };
  "routes/similar_props.tsx": {
    id: "routes/similar_props";
    page: "/similar_props";
  };
  "routes/stats.tsx": {
    id: "routes/stats";
    page: "/stats";
  };
  "routes/stats_progress.tsx": {
    id: "routes/stats_progress";
    page: "/stats_progress";
  };
  "routes/story.tsx": {
    id: "routes/story";
    page: "/story";
  };
  "routes/study.tsx": {
    id: "routes/study";
    page: "/study";
  };
  "routes/study_weak_chars.tsx": {
    id: "routes/study_weak_chars";
    page: "/study_weak_chars";
  };
  "routes/advance_cards.tsx": {
    id: "routes/advance_cards";
    page: "/advance_cards";
  };
  "routes/sylable/$sylable.tsx": {
    id: "routes/sylable/$sylable";
    page: "/sylable/:sylable";
  };
  "routes/tag/$tagName.tsx": {
    id: "routes/tag/$tagName";
    page: "/tag/:tagName";
  };
  "routes/tags.tsx": {
    id: "routes/tags";
    page: "/tags";
  };
  "routes/todo_chars.tsx": {
    id: "routes/todo_chars";
    page: "/todo_chars";
  };
  "routes/chars_sentence_input.tsx": {
    id: "routes/chars_sentence_input";
    page: "/chars_sentence_input";
  };
  "routes/chars_multiple_pronunciation.tsx": {
    id: "routes/chars_multiple_pronunciation";
    page: "/chars_multiple_pronunciation";
  };
  "routes/exam_level.tsx": {
    id: "routes/exam_level";
    page: "/exam_level";
  };
  "routes/help.tsx": {
    id: "routes/help";
    page: "/help";
  };
  "routes/homophones.tsx": {
    id: "routes/homophones";
    page: "/homophones";
  };
  "routes/migration.tsx": {
    id: "routes/migration";
    page: "/migration";
  };
  "routes/tone/$toneName.tsx": {
    id: "routes/tone/$toneName";
    page: "/tone/:toneName";
  };
  "routes/tones.tsx": {
    id: "routes/tones";
    page: "/tones";
  };
  "routes/zhuyin_typing.tsx": {
    id: "routes/zhuyin_typing";
    page: "/zhuyin_typing";
  };
  "routes/dong_demo.tsx": {
    id: "routes/dong_demo";
    page: "/dong_demo";
  };
  "routes/dev_files.tsx": {
    id: "routes/dev_files";
    page: "/installHook.js.map";
  };
  "routes/index.tsx": {
    id: "routes/index";
    page: "/";
  };
};